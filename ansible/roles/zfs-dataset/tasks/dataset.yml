---
- name: Ensure parent dataset(s) exist
  command: "zfs create {{ item }}"
  args:
    creates: "/{{ item }}"
  loop: "{{ zfs_configuration.data_sets | map(attribute='name') | map('regex_replace', '/[^/]+$', '') | unique | list }}"
  when: item != ""
  # This task extracts the parent dataset from each dataset name (e.g. for prismapool/root/docker it extracts prismapool/root)
  # and creates it if it does not exist.

- name: Create ZFS dataset(s) if not present
  block:
    - name: Check if ZFS dataset {{ dataset.name }} exists
      command: "zfs list {{ dataset.name }}"
      register: dataset_check
      ignore_errors: yes
      changed_when: false

    - name: Create ZFS dataset {{ dataset.name }}
      command: "zfs create -o mountpoint={{ dataset.mountpoint }} {{ dataset.name }}"
      when: dataset_check.rc != 0
  loop: "{{ zfs_configuration.data_sets }}"
  loop_control:
    loop_var: dataset

- name: Set quota for ZFS dataset(s)
  loop: "{{ zfs_configuration.data_sets }}"
  loop_control:
    loop_var: dataset
  command: >
    zfs set quota={{ dataset.quota }} {{ dataset.name }}
