---
- name: Ensure temporary download directory exists for {{ driver.name }}
  file:
    path: "{{ offline_deploy_path }}/drivers"
    state: directory
    mode: '0755'

- name: Set driver filename for {{ driver.name }}
  set_fact:
    driver_filename: "{{ driver.url | basename }}"

- name: Download {{ driver.name }} driver
  get_url:
    url: "{{ driver.url }}"
    dest: "{{ offline_deploy_path }}/drivers/{{ driver_filename }}"
    mode: '0755'
    force: no

- name: Install gcc-9
  apt:
    name: gcc-9
    state: present

- name: Disable Nouveau driver by blacklisting it
  copy:
    dest: /etc/modprobe.d/nvidia-installer-disable-nouveau.conf
    content: |
      blacklist nouveau
      options nouveau modeset=0
    mode: '0644'
  notify: Update initramfs

- name: Update initramfs (Debian/Ubuntu)
  command: update-initramfs -u
  become: true
  when: ansible_os_family == "Debian"

- name: Reboot the system to apply Nouveau changes
  reboot:
    reboot_timeout: 600
  when: do_reboot | default(true)


- name: Install CUDA driver from runfile
  command: "sh {{ offline_deploy_path }}/drivers/{{ driver.name }}.run --dkms --silent"
  args:
    creates: "/usr/bin/nvidia-smi"
  register: runfile_install

- name: Display runfile installation result
  debug:
    var: runfile_install

- name: Reboot the system to load the new driver
  reboot:
    reboot_timeout: 600
  when: runfile_install.changed and do_reboot | default(false)
