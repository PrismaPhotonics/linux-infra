kube-prometheus-stack:
  grafana:
    enabled: true
    adminUser: admin
    image:
      registry: "localhost:5000"
      repository: 262399703539.dkr.ecr.eu-central-1.amazonaws.com/grafana-iec
      tag: on-prem2 
      env:
        GF_PATHS_PLUGINS: "/data/grafana/plugins"
    grafana.ini:
      paths:
        plugins: /data/grafana/plugins
      users:
        allow_sign_up: False
        auto_assign_org_role: Viewer
        default_theme: dark
      emails:
        welcome_email_on_sign_up: False
      auth:
        disable_login_form: false
        login_cookie_name: grafana_session
        login_maximum_inactive_lifetime_duration: 6h
        login_maximum_lifetime_duration: 6h
        token_rotation_interval_minutes: 10
      auth.anonymous:
        enabled: false
        org_name: "Main Org."
        org_role: Viewer
      server:
        domain: localhost
        root_url: https://localhost/grafana/
        serve_from_sub_path: true
      analytics:
        reporting_enabled: "True"
      dashboards:
        versions_to_keep: 20
      dashboards.json:
        enabled: true
        path: /etc/grafana/provisioning/dashboards
      alerting:
        enabled: true
        execute_alerts: True
      log:
        mode: console, file
        level: info
    sidecar:
      image:
        registry: "localhost:5000"
        repository: quay.io/kiwigrid/k8s-sidecar
        tag: 1.25.2

  kube-state-metrics:
    image:
      registry: "localhost:5000"
      repository: registry.k8s.io/kube-state-metrics/kube-state-metrics
      tag: v2.10.1

  prometheusOperator:
    image:
      registry: "localhost:5000"
      repository: quay.io/prometheus-operator/prometheus-operator
      tag: v0.70.0

    prometheusConfigReloader:
      image:
        registry: "localhost:5000"
        repository: quay.io/prometheus-operator/prometheus-config-reloader
        tag: v0.70.0
    admissionWebhooks:
      patch:
        image:
          registry: "localhost:5000"
          repository: registry.k8s.io/ingress-nginx/kube-webhook-certgen
          tag: v20221220-controller-v1.5.1-58-g787ea74b6
  prometheus:
    server:
      persistentVolume:
        enabled: true
    prometheusSpec:
      image:
        registry: "localhost:5000"
        repository: quay.io/prometheus/prometheus
        tag: v2.48.0
      retentionSize: "149GB"
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      additionalScrapeConfigs: |
        - job_name: prisma-external
          scheme: http
          static_configs:
            - targets:
              - 10.10.10.2:9273
        - job_name: prisma-external-tls
          scheme: https
          tls_config:
            insecure_skip_verify: true
          static_configs:
            - targets:
              - 10.10.10.2:9273
          basic_auth:
            username: prisma
            password: ShowMeWhereItHurts
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: prometheus
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 150Gi

  prometheus-node-exporter:
    image:
      registry: "localhost:5000"
      repository: quay.io/prometheus/node-exporter
      tag: "v1.7.0"

  alertmanager:
    enabled: false

telegraf:
  replicaCount: 1

  image:
    repo: "localhost:5000/telegraf"
    tag: "latest"
    pullPolicy: IfNotPresent

  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "500Mi"
      cpu: "200m"

  serviceMonitor:
    enabled: true
    interval: "10s"

  config:
    agent:
      interval: "10s"
      round_interval: true
      metric_batch_size: 1000
      metric_buffer_limit: 10000
      collection_jitter: "0s"
      flush_interval: "10s"
      flush_jitter: "0s"
      precision: ""
      debug: true
      quiet: false
      logtarget: "stderr"
      logfile: "/prisma/logs/telegraf/telegraf.log"
      logfile_rotation_max_size: "10MB"
      logfile_rotation_max_archives: 7
      omit_hostname: false
    outputs:
      - prometheus_client:
          listen: ":9273"
          path: "/metrics"
          expiration_interval: "60s"
          string_as_label: true
      - file:
          files:
            - "stdout"
          data_format: "influx"

helm-dashboard:
  service:
    type: LoadBalancer
    loadBalancerIP: 10.10.$SUBNET_OCTET.106

kubernetes-dashboard:
  protocolHttp: true