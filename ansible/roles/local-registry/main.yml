---
- name: List Docker images
  command: docker images --format '{{.Repository}}:{{.Tag}}'
  register: docker_images_output

- name: Mirror Docker images to local registry
  block:
    - name: Compute new image tag for local registry
      set_fact:
        original_image: "{{ item }}"
        image_repo: "{{ item.split(':')[0] }}"
        image_tag: "{{ item.split(':')[1] }}"
        parts: "{{ image_repo.split('/') }}"
        new_repo: >-
          {%- if parts | length == 1 -%}
            library/{{ image_repo }}
          {%- elif parts[0] is regex('.*[.:].*') -%}
            {{ parts[1:] | join('/') }}
          {%- else -%}
            {{ image_repo }}
          {%- endif -%}
        new_image: "{{ dockerRegistryIP }}/{{ new_repo }}:{{ image_tag }}"

    - name: Check if the image already exists in the local registry
      command: docker manifest inspect {{ new_image }}
      register: check_manifest
      ignore_errors: yes

    - name: Tag image for local registry (if not already present)
      command: docker tag {{ original_image }} {{ new_image }}
      when: check_manifest.rc != 0

    - name: Push image to local registry (if not already present)
      command: docker push {{ new_image }}
      when: check_manifest.rc != 0

  loop: "{{ docker_images_output.stdout_lines | reject('match', '^' + dockerRegistryIP) | list }}"
  loop_control:
    label: "{{ item }}"
