---
# tasks/main.yml

#########################################
# 1. Ensure directories exist and debug input
#########################################
- name: Debug k8s_tools variable
  debug:
    var: k8s_tools

- name: Ensure offline deploy directory exists
  file:
    path: /root/offline_deploy/k8s-utils
    state: directory
    mode: '0755'
  become: yes

- name: Create temporary directory for tool installation
  file:
    path: /tmp/k8s-tools
    state: directory
    mode: '0755'
  become: yes

#########################################
# 2. Download Tools (if not already present)
#########################################
- name: Check if each tool file exists locally
  stat:
    path: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
  register: tool_stat
  loop: "{{ k8s_tools }}"
  loop_control:
    label: "{{ item.name }}"
  become: yes

- name: Download missing tool files
  get_url:
    url: "{{ item.version }}"
    dest: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
    mode: "{{ (item.version | basename) is match('.*\\.tar\\.gz') | ternary('0644','0755') }}"
  when: not tool_stat.results[loop.index0].stat.exists
  loop: "{{ k8s_tools }}"
  loop_control:
    label: "{{ item.name }}"
  become: yes

#########################################
# 3. Install Tools
#########################################
- name: Install each k8s tool offline
  block:

    #######################################
    # 3a. Install tarball-based tools
    #######################################
    - name: "Install tarball tool: {{ item.name }}"
      block:
        - name: "Copy tarball for {{ item.name }} to temporary directory"
          copy:
            src: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
            dest: "/tmp/k8s-tools/{{ item.version | basename }}"
            mode: '0644'
          become: yes

        - name: "Extract tarball for {{ item.name }}"
          unarchive:
            src: "/tmp/k8s-tools/{{ item.version | basename }}"
            dest: /tmp/k8s-tools/
            remote_src: yes
          become: yes

        - name: "Install binary for {{ item.name }}"
          copy:
            # Special case for Helm as the binary is inside a subdirectory.
            src: >-
              {% if item.name == 'helm' %}
                /tmp/k8s-tools/linux-amd64/helm
              {% else %}
                /tmp/k8s-tools/{{ item.name }}
              {% endif %}
            dest: "/usr/local/bin/{{ item.name }}"
            mode: '0755'
            remote_src: yes
          become: yes
      when: (item.version | basename) is match('.*\\.tar\\.gz')

    #######################################
    # 3b. Install binary-based tools
    #######################################
    - name: "Install binary tool: {{ item.name }}"
      copy:
        src: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
        dest: "/usr/local/bin/{{ item.name }}"
        mode: '0755'
      become: yes
      when: not ((item.version | basename) is match('.*\\.tar\\.gz'))

  loop: "{{ k8s_tools }}"
  loop_control:
    label: "{{ item.name }}"

#########################################
# 4. Cleanup temporary directory
#########################################
- name: Remove temporary directory
  file:
    path: /tmp/k8s-tools
    state: absent
  become: yes
