---
# tasks/main.yml

- name: Load versions file
  include_vars:
    file: /path/to/versions.yml
    name: spec

- name: Debug versions data
  debug:
    var: spec.k8s_tools | default([])

#########################################
# Pre-requisites: Ensure offline directory exists
#########################################
- name: Ensure offline directory exists
  file:
    path: /root/offline_deploy/k8s-utils
    state: directory
    mode: '0755'
  become: yes

#########################################
# Check and download missing offline files for each tool
#########################################
- name: Check and download offline file for each tool
  block:
    - name: Check if {{ item.name }} file exists locally
      stat:
        path: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
      register: file_stat
      become: yes

    - name: Download {{ item.name }} if not present
      get_url:
        url: "{{ item.version }}"
        dest: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
        mode: '0644'
      when: not file_stat.stat.exists
      become: yes
  loop: "{{ spec.k8s_tools | default([]) }}"

#########################################
# Create temporary directory for processing tarballs
#########################################
- name: Create temporary directory for offline tools
  file:
    path: /tmp/k8s-tools
    state: directory
    mode: '0755'
  become: yes

#########################################
# Install tarball-based tools (helm and k9s)
#########################################
- name: Install tarball-based tool
  block:
    - name: Copy {{ item.name }} tarball to temporary directory
      copy:
        src: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
        dest: "/tmp/k8s-tools/{{ item.version | basename }}"
        mode: '0644'
      become: yes

    - name: Extract {{ item.name }} tarball
      unarchive:
        src: "/tmp/k8s-tools/{{ item.version | basename }}"
        dest: /tmp/k8s-tools/
        remote_src: yes
      become: yes

    - name: Install {{ item.name }} binary
      copy:
        src: >-
          {% if item.name == 'helm' %}
            /tmp/k8s-tools/linux-amd64/helm
          {% elif item.name == 'k9s' %}
            /tmp/k8s-tools/k9s
          {% endif %}
        dest: >-
          {% if item.name == 'helm' %}
            /usr/local/bin/helm
          {% elif item.name == 'k9s' %}
            /usr/local/bin/k9s
          {% endif %}
        mode: '0755'
        remote_src: yes
      become: yes
  when: item.name in ['helm', 'k9s']
  loop: "{{ spec.k8s_tools | default([]) }}"

#########################################
# Install Helmfile (standalone binary)
#########################################
- name: Install helmfile binary
  block:
    - name: Copy helmfile binary to /usr/local/bin
      copy:
        src: "/root/offline_deploy/k8s-utils/{{ item.version | basename }}"
        dest: /usr/local/bin/helmfile
        mode: '0755'
      become: yes
  when: item.name == 'helmfile'
  loop: "{{ spec.k8s_tools | default([]) }}"

#########################################
# Optional: Clean up temporary directory
#########################################
- name: Remove temporary directory
  file:
    path: /tmp/k8s-tools
    state: absent
  become: yes
