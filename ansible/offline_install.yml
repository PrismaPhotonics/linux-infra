---
- name: Offline Installation Playbook
  hosts: all
  become: true
  gather_facts: true

  # 1) First, load the siteâ€™s versions.yml
  pre_tasks:
    
    - name: Show filepath
      debug:
        msg: "{{ versions_file }}"

    - name: Load versions file
      include_vars:
        file: "{{ versions_file }}"
        name: versions_data
#
#    - name: Debug versions data
#      debug:
#        var: versions_data

  roles:
    - role: create-vms
      when: enable_create_worker_node | default(false)
      vars:
        proxmox_host_ip: "{{ configurations.proxmox_host_ip }}"
        proxmox_user: "{{ configurations.proxmox_user }}"
        proxmox_user_password: "{{ configurations.proxmox_user_password }}"
        proxmox_node: "{{ configurations.proxmox_node }}"
        vms: "{{ configurations.vms }}"

    # - role: offline-apt-repo
    #   when: enable_offline_apt_repo | default(false)

    # - role: apt-install
    #   when: enable_apt_install | default(false)
    #   vars:
    #     apt_packages: "{{ versions_data.apt_packages | default([]) }}"

    # - role: network-setup
    #   when: enable_network_setup | default(false)

    # - role: local-registry
    #   when: enable_network_setup | default(false)

    # # 4) Docker load if enabled (pass docker_images from versions_data)
    # - role: docker-load
    #   when: enable_docker_load | default(false)
    #   vars:
    #     docker_images: "{{ versions_data.docker_images | default([]) }}"

    # # 5) Helm install if enabled (pass helm_charts from versions_data)
    # - role: helm-install
    #   when: enable_helm_install | default(false)
    #   vars:
    #     helm_charts: "{{ versions_data.helm_charts | default([]) }}"

